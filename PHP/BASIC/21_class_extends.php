Класс умеет наследовать константы, методы и свойства другого класса
через ключевое слово extends в объявлении класса. Невозможно наследовать
больше одного класса, одному классу разрешено наследовать только один базовый класс.

Константы, методы и свойства, которые унаследовал класс, разрешается
переопределять в дочернем классе путём повторного объявления с таким
же именем, которое определили в родительском классе. Метод или константу
нельзя переопределить, если в родительском классе метод или константу
определили окончательными — с ключевым словом final. Доступ к переопределённым
методам или статическим свойствам родительского класса получают, когда ссылаются на них через parent::.

Простое наследование классов

<?php

class ExtendClass extends SimpleClass
{
    // Переопределение родительского метода
    function displayVar()
    {
        echo "Расширенный класс\n";
        parent::displayVar();
    }
}

$extended = new ExtendClass();
$extended->displayVar();

?>
Правила совместимости сигнатур
При переопределении метода сигнатура метода должна быть совместима с родительским методом.
В противном случае PHP выдаст фатальную ошибку или, до PHP 8.0.0, сгенерирует ошибку уровня E_WARNING.

Совместимость дочерних методов

<?php

class Base
{
    public function foo(int $a)
    {
        echo "Допустимо\n";
    }
}

class Extend1 extends Base
{
    function foo(int $a = 5)
    {
        parent::foo($a);
    }
}

class Extend2 extends Base
{
    function foo(int $a, $b = 5)
    {
        parent::foo($a);
    }
}

$extended1 = new Extend1();
$extended1->foo();
$extended2 = new Extend2();
$extended2->foo(1);

?>
Результат выполнения приведённого примера:

Допустимо
Допустимо
