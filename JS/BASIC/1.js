
alert( 'Привет, мир!' );

// <script src="/path/to/script.js"></script>
[1, 2].forEach(alert);

"use strict";
// этот код работает в современном режиме

let message;
message = 'Hello!';
// Константы в верхнем регистре
// Широко распространена практика использования констант в качестве псевдонимов для трудно запоминаемых значений, которые известны до начала исполнения скрипта.
const COLOR_RED = "#F00";

alert( 1 / 0 ); // Infinity

alert( Infinity ); // Infinity
// NaN означает вычислительную ошибку. Это результат неправильной или неопределённой математической операции, например:

alert( "не число" / 2 ); // NaN, такое деление является ошибкой
// Значение NaN «прилипчиво». Любая математическая операция с NaN возвращает NaN:

alert( NaN + 1 ); // NaN
alert( 3 * NaN ); // NaN
alert( "не число" / 2 - 1 ); // NaN

let phrase = `Обратные кавычки позволяют встраивать переменные ${str}`;

// В JavaScript null не является «ссылкой на несуществующий объект» или «нулевым указателем», как в некоторых других языках.
// Это просто специальное значение, которое представляет собой «ничего», «пусто» или «значение неизвестно».
let age;

alert(age); // выведет "undefined"
let age = 123;
// изменяем значение на undefined
age = undefined;

let age = prompt('Сколько тебе лет?', 100);
alert(`Тебе ${age} лет!`); // Тебе 100 лет!
// Этот код отобразит модальное окно с текстом, полем для ввода текста и кнопками OK/Отмена.

let isBoss = confirm("Ты здесь главный?");
alert( isBoss ); // true, если нажата OK


let value = true;
alert(typeof value); // boolean
value = String(value); // теперь value это строка "true"
alert(typeof value); // string


alert( "6" / "2" ); // 3, строки преобразуются в числа


alert( Number("   123   ") ); // 123
alert( Number("123z") );      // NaN (ошибка чтения числа на месте символа "z")
alert( Number(true) );        // 1
alert( Number(false) );       // 0


alert( Boolean(1) ); // true
alert( Boolean(0) ); // false

alert( Boolean("Привет!") ); // true
alert( Boolean("") ); // false

// Заметим, что строка с нулём "0" — это true
// Некоторые языки (к примеру, PHP) воспринимают строку "0" как false. Но в JavaScript, если строка не пустая, то она всегда true.


// Унарным называется оператор, который применяется к одному операнду. Например, оператор унарный минус "-" меняет знак числа на противоположный:

let x = 1;
x = -x;
alert( x ); // -1, применили унарный минус
// Бинарным называется оператор, который применяется к двум операндам. Тот же минус существует и в бинарной форме:
let x = 1, y = 3;
alert( y - x ); // 2, бинарный минус вычитает значения

let apples = "2";
let oranges = "3";

// оба операнда предварительно преобразованы в числа
alert( +apples + +oranges ); // 5

// более длинный вариант
// alert( Number(apples) + Number(oranges) ); // 5

if (1 && 0) { // вычисляется как true && false
    alert( "не сработает, так как результат ложный" );
}




















