

//Объект Proxy «оборачивается» вокруг другого объекта и может перехватывать
// (и, при желании, самостоятельно обрабатывать) разные действия с ним, например чтение/запись свойств и другие.
// Далее мы будем называть такие объекты «прокси».




let proxy = new Proxy(target, handler);
// target – это объект, для которого нужно сделать прокси, может быть чем угодно, включая функции.
//     handler – конфигурация прокси: объект с «ловушками» («traps»): методами,
//     которые перехватывают разные операции, например,
//     ловушка get – для чтения свойства из target,
//     ловушка set – для записи свойства в target и так далее.



// В качестве начального примера создадим прокси без всяких ловушек:

let target = {};
let proxy = new Proxy(target, {}); // пустой handler

proxy.test = 5; // записываем в прокси (1)
alert(target.test); // 5, свойство появилось в target!

alert(proxy.test); // 5, мы также можем прочитать его из прокси (2)

for(let key in proxy) alert(key); // test, итерация работает (3)
// Так как нет ловушек, то все операции на proxy применяются к оригинальному объекту target.

